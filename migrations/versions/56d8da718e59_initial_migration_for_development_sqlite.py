"""Initial migration for Development SQLite

Revision ID: 56d8da718e59
Revises: 
Create Date: 2025-01-14 18:09:49.432282

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '56d8da718e59'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keyword',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('word', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('keyword', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_keyword_word'), ['word'], unique=True)

    op.create_table('series_base',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('date_create', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('date_update', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_series_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=True),
    sa.Column('date_create', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('date_update', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('series_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_group_code', sa.String(length=12), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['series_base.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['series_group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('series_group_code')
    )
    op.create_table('seriesbase_keyword',
    sa.Column('seriesbase_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keyword.id'], ),
    sa.ForeignKeyConstraint(['seriesbase_id'], ['series_base.id'], ),
    sa.PrimaryKeyConstraint('seriesbase_id', 'keyword_id')
    )
    op.create_table('time_series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_series_code', sa.String(length=12), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('time_frequency', sa.String(length=3), nullable=True),
    sa.Column('delta_type', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['series_base.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['time_series_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('time_series_code')
    )
    op.create_table('data_point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('date_release', sa.Date(), nullable=True),
    sa.Column('time_series_id', sa.Integer(), nullable=False),
    sa.Column('date_create', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('date_update', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['time_series_id'], ['time_series.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('time_series_id', 'date', 'value', name='uix_timeseries_date_value')
    )
    op.create_table('seriesgroup_seriesbase',
    sa.Column('seriesgroup_id', sa.Integer(), nullable=False),
    sa.Column('seriesbase_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['seriesbase_id'], ['series_base.id'], ),
    sa.ForeignKeyConstraint(['seriesgroup_id'], ['series_group.id'], ),
    sa.PrimaryKeyConstraint('seriesgroup_id', 'seriesbase_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('seriesgroup_seriesbase')
    op.drop_table('data_point')
    op.drop_table('time_series')
    op.drop_table('seriesbase_keyword')
    op.drop_table('series_group')
    op.drop_table('time_series_type')
    op.drop_table('series_base')
    with op.batch_alter_table('keyword', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_keyword_word'))

    op.drop_table('keyword')
    # ### end Alembic commands ###
